name: 'Validate helm charts'
description: 'prevalidate helm chart template before its deployment; executes helm lint and helm template commands'
inputs:
  chart-path:
    description: 'Path to helm chart directory'
    required: true
    default: './helm'
  extra-args:
    description: 'Arguments to be appended to lint and template commands such as "--set global.env=dev"'
    required: true
    default: ''
runs:
  using: "composite"
  steps:
    - name: validate helm chart
      shell: bash
      run: |
        helm version
        helm dependency update ${{ inputs.chart-path }}
        helm lint ${{ inputs.chart-path }} ${{ inputs.extra-args }}
        helm template ${{ inputs.chart-path }} ${{ inputs.extra-args }}
    - name: ensure no trailing spaces in config maps
      shell: bash
      run: |
        configmaps=($(find ${{ inputs.chart-path }} -type f -regex '.*\.ya*ml' -exec grep -l "kind: ConfigMap" {} \;))
        COUNTER=0
        echo "Checking these config maps for trailing spaces:"
        for yaml in "${configmaps[@]}"
        do
            echo $yaml
            (grep -nE '\S\s+$' $yaml && gexit_code=0 && echo "got exit $gexit_code") || gexit_code=$?
            echo "now exit $gexit_code"
            test $gexit_code -eq 0 && echo "now counter $COUNTER" && COUNTER=$((COUNTER+1)) && echo "^^^^^^ in file: $yaml" && echo
        done
        echo "final counter $COUNTER" && test $COUNTER -gt 0 && echo "$COUNTER config map yamls contain trailing spaces, use line numbers to remove them"

        (grep -nE '\S\s+$' ${{ inputs.chart-path }}/values.yaml && gexit_code=0 && "got values exit $gexit_code") || gexit_code=$?
        (test $gexit_code -eq 0 && echo "^^^^^^ values.yaml has trailing spaces, please remove them" && exit 1) || (test $COUNTER -gt 0 && exit 1) || true
