name: Trivy Image Scan
description: 'Trivy Image Scan'
inputs:
  image:
    description: 'image name'
    required: true
  tag:
    description: 'image tag'
    required: false
  ignore-unfixed:
    description: 'ignore unfixed vulnerabilities'
    required: true
    default: 'false'
  vuln-type:
    description: 'comma-separated list of vulnerability types (os,library)'
    required: true
    default: 'os,library'
  severity:
    description: 'severities of vulnerabilities to be displayed'
    required: true
    default: 'HIGH,CRITICAL'
  timeout:
    description: 'timeout (default 5m0s)'
    required: true
    default: '5m0s'
  trivyignores:
    description: 'comma-separated list of relative paths in repository to one or more .trivyignore files'
    required: true
    default: '.trivyignore'
  output-mode:
    description: 'Upload to github security via sarif format (github), or output to a file named "trivy.json" (json), or log pretty print output (log)'
    required: true
    default: 'log'
runs:
  using: "composite"
  steps:
    - uses: gradle/gradle-build-action@v2
    - name: Determine container tag
      if: ${{ github.event.inputs.tag == '' }}
      shell: bash
      run: |
        echo "IMAGE_TAG=$(./gradlew -q printDockerImageDefaultTag | head -1)" >> $GITHUB_ENV

    - name: Determine container tag
      if: ${{ github.event.inputs.tag != '' }}
      shell: bash
      run: |
        echo "IMAGE_TAG=${{ inputs.tag }}" >> $GITHUB_ENV

    - name: Set up output values
      if: ${{ inputs.output-mode == 'github' }}
      shell: bash
      run: |
        echo "FORMAT=sarif" >> $GITHUB_ENV
        echo "OUTPUT=''trivy-results.sarif''" >> $GITHUB_ENV
    
    - name: Set up output values
      if: ${{ inputs.output-mode == 'json' }}
      shell: bash
      run: |
        echo "FORMAT=json" >> $GITHUB_ENV
        echo "OUTPUT=''trivy-results.json''" >> $GITHUB_ENV

    - name: Set up output values
      if: ${{ inputs.output-mode == 'log' }}
      shell: bash
      run: |
        echo "FORMAT=table" >> $GITHUB_ENV

    - name: Default ignore file if not exist
      if: ${{ inputs.trivyignores == '.trivyignore' }}  # If a non-default ignore is passed, then we can assume it exists
      shell: bash
      run: |
        touch .trivyignore

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        trivyignores: ${{ inputs.trivyignores }}
        image-ref: ${{ inputs.image }}:${{ env.IMAGE_TAG }}
        format: ${{ env.FORMAT }}
        output: ${{ env.OUTPUT }}
        vuln-type: ${{ inputs.vuln-type }}
        severity: ${{ inputs.severity }}
        ignore-unfixed: ${{ inputs.ignore-unfixed }}
        timeout: ${{ inputs.timeout }}
        exit-code: '1'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: ${{ (success() || failure()) && inputs.output-mode == 'github' }}
      with:
        sarif_file: ${{ env.OUTPUT }}